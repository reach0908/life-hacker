openapi: 3.0.3
info:
  title: LifeHacker API - Energy-First Productivity (Actual Implementation)
  description: ✅ IMPLEMENTED API endpoints for energy-adaptive productivity recommendations and user tracking
  version: 1.0.0
  contact:
    name: LifeHacker Team
    email: api@lifehacker.app

servers:
  - url: http://localhost:3000
    description: Development server (actual implementation)
  - url: https://api.lifehacker.app/v1
    description: Production server (planned)

security:
  - BearerAuth: []

paths:
  # ✅ IMPLEMENTED - Authentication Endpoints
  /:
    get:
      summary: Health check endpoint
      tags: [Health]
      responses:
        '200':
          description: Service is healthy
          content:
            text/plain:
              schema:
                type: string
                example: "OK"

  /auth/google:
    get:
      summary: ✅ IMPLEMENTED - Initiate Google OAuth authentication (Web)
      tags: [Authentication]
      parameters:
        - name: redirect_uri
          in: query
          schema:
            type: string
            format: uri
          description: Redirect URI after successful authentication
      responses:
        '302':
          description: Redirect to Google OAuth consent screen
        '400':
          $ref: '#/components/responses/BadRequest'

  /auth/google/callback:
    get:
      summary: ✅ IMPLEMENTED - Google OAuth callback handler (Web)
      tags: [Authentication]
      parameters:
        - name: code
          in: query
          required: true
          schema:
            type: string
          description: OAuth authorization code from Google
        - name: state
          in: query
          schema:
            type: string
          description: State parameter for CSRF protection
      responses:
        '200':
          description: Authentication successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /auth/mobile/google:
    post:
      summary: ✅ IMPLEMENTED - Mobile Google Sign-In with ID token
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                idToken:
                  type: string
                  description: Google ID token from mobile app
              required:
                - idToken
      responses:
        '200':
          description: Authentication successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /auth/refresh:
    post:
      summary: ✅ IMPLEMENTED - Refresh access token
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
              required:
                - refreshToken
      responses:
        '200':
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /auth/logout:
    post:
      summary: ✅ IMPLEMENTED - Logout and invalidate refresh token
      tags: [Authentication]
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
              required:
                - refreshToken
      responses:
        '200':
          description: Logout successful
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  # ✅ IMPLEMENTED - User Management Endpoints
  /users/profile:
    get:
      summary: ✅ IMPLEMENTED - Get current user profile
      tags: [Users]
      security:
        - BearerAuth: []
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

    put:
      summary: ✅ IMPLEMENTED - Update user profile
      tags: [Users]
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  maxLength: 100
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  # ✅ IMPLEMENTED - Energy Tracking Endpoints (7 endpoints)
  /energy-levels:
    post:
      summary: ✅ IMPLEMENTED - Create new energy session
      tags: [Energy Tracking]
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEnergySessionDto'
      responses:
        '201':
          description: Energy session created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnergySessionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

    get:
      summary: ✅ IMPLEMENTED - Get energy sessions with filtering and pagination
      tags: [Energy Tracking]
      security:
        - BearerAuth: []
      parameters:
        - name: skip
          in: query
          schema:
            type: integer
            minimum: 0
          description: Number of records to skip for pagination
        - name: take
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Number of records to return
        - name: orderBy
          in: query
          schema:
            type: string
            enum: [newest, oldest, energyScore, productivity]
            default: newest
          description: Sort order for results
        - name: startDate
          in: query
          schema:
            type: string
            format: date-time
          description: Filter sessions after this date
        - name: endDate
          in: query
          schema:
            type: string
            format: date-time
          description: Filter sessions before this date
        - name: minEnergyScore
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 5
          description: Minimum energy score filter
        - name: maxEnergyScore
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 5
          description: Maximum energy score filter
        - name: tags
          in: query
          schema:
            type: string
          description: Comma-separated tags to filter by
        - name: activity
          in: query
          schema:
            type: string
          description: Filter by activity name
        - name: location
          in: query
          schema:
            type: string
          description: Filter by location
        - name: isActive
          in: query
          schema:
            type: string
            enum: [true, false]
          description: Filter active/completed sessions
      responses:
        '200':
          description: Energy sessions retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnergySessionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /energy-levels/active:
    get:
      summary: ✅ IMPLEMENTED - Get currently active energy session
      tags: [Energy Tracking]
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Active energy session retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnergySessionResponse'
        '404':
          description: No active session found
        '401':
          $ref: '#/components/responses/Unauthorized'

  /energy-levels/{id}:
    get:
      summary: ✅ IMPLEMENTED - Get specific energy session by ID
      tags: [Energy Tracking]
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Energy session ID
      responses:
        '200':
          description: Energy session retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnergySessionResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'

    patch:
      summary: ✅ IMPLEMENTED - Update energy session
      tags: [Energy Tracking]
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Energy session ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEnergySessionDto'
      responses:
        '200':
          description: Energy session updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnergySessionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /energy-levels/{id}/complete:
    patch:
      summary: ✅ IMPLEMENTED - Complete an active energy session
      tags: [Energy Tracking]
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Energy session ID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sessionEndTime:
                  type: string
                  format: date-time
                  description: Custom end time (optional, defaults to current time)
                notes:
                  type: string
                  description: Final session notes
      responses:
        '200':
          description: Energy session completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnergySessionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /energy-levels/stats:
    get:
      summary: ✅ IMPLEMENTED - Get energy statistics and analytics
      tags: [Energy Tracking]
      security:
        - BearerAuth: []
      parameters:
        - name: period
          in: query
          schema:
            type: string
            enum: [week, month, quarter, year]
            default: month
          description: Time period for statistics
      responses:
        '200':
          description: Energy statistics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalSessions:
                    type: integer
                  averageEnergyScore:
                    type: number
                  averageProductivity:
                    type: number
                  totalDuration:
                    type: integer
                    description: Total duration in minutes
                  energyScoreDistribution:
                    type: object
                    additionalProperties:
                      type: integer
                  productivityTrend:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                          format: date
                        averageProductivity:
                          type: number
        '401':
          $ref: '#/components/responses/Unauthorized'

  # ✅ IMPLEMENTED - Routine Recommendations Endpoints
  /recommendations:
    get:
      summary: ✅ IMPLEMENTED - Get personalized routine recommendations
      tags: [Routine Recommendations]
      security:
        - BearerAuth: []
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [SUGGESTED, ACCEPTED, COMPLETED, SKIPPED, EXPIRED]
          description: Filter by recommendation status
        - name: type
          in: query
          schema:
            type: string
            enum: [ENERGY_BOOST, PRODUCTIVITY, RECOVERY, MAINTENANCE]
          description: Filter by recommendation type
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 10
          description: Maximum number of recommendations to return
      responses:
        '200':
          description: Recommendations retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoutineRecommendation'
        '401':
          $ref: '#/components/responses/Unauthorized'

    post:
      summary: ✅ IMPLEMENTED - Generate new recommendations based on current context
      tags: [Routine Recommendations]
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                currentEnergyLevel:
                  type: integer
                  minimum: 1
                  maximum: 5
                  description: Current user energy level
                availableTime:
                  type: integer
                  minimum: 5
                  maximum: 480
                  description: Available time in minutes
                preferredCategories:
                  type: array
                  items:
                    type: string
                    enum: [EXERCISE, MEDITATION, WORK, LEARNING, SOCIAL, REST]
                  description: Preferred activity categories
              required:
                - currentEnergyLevel
                - availableTime
      responses:
        '201':
          description: Recommendations generated successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoutineRecommendation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /recommendations/{id}/accept:
    patch:
      summary: ✅ IMPLEMENTED - Accept a recommendation
      tags: [Routine Recommendations]
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Recommendation ID
      responses:
        '200':
          description: Recommendation accepted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutineRecommendation'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /recommendations/{id}/complete:
    patch:
      summary: ✅ IMPLEMENTED - Mark recommendation as completed
      tags: [Routine Recommendations]
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Recommendation ID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                actualDuration:
                  type: integer
                  minimum: 1
                  description: Actual time spent in minutes
                feedback:
                  type: string
                  description: User feedback about the activity
                rating:
                  type: integer
                  minimum: 1
                  maximum: 5
                  description: User rating of the activity
      responses:
        '200':
          description: Recommendation completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutineRecommendation'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /recommendations/{id}/skip:
    patch:
      summary: ✅ IMPLEMENTED - Skip a recommendation
      tags: [Routine Recommendations]
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Recommendation ID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
                  description: Reason for skipping the recommendation
      responses:
        '200':
          description: Recommendation skipped successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutineRecommendation'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'

  # ✅ IMPLEMENTED - Activity Management Endpoints
  /activities:
    get:
      summary: ✅ IMPLEMENTED - Get available activities
      tags: [Activities]
      security:
        - BearerAuth: []
      parameters:
        - name: category
          in: query
          schema:
            type: string
            enum: [EXERCISE, MEDITATION, WORK, LEARNING, SOCIAL, REST]
          description: Filter by activity category
        - name: energyLevel
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 5
          description: Filter by recommended energy level
        - name: timeOfDay
          in: query
          schema:
            type: string
            enum: [MORNING, AFTERNOON, EVENING, ANY]
          description: Filter by preferred time of day
        - name: isActive
          in: query
          schema:
            type: boolean
            default: true
          description: Filter active activities only
      responses:
        '200':
          description: Activities retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity'
        '401':
          $ref: '#/components/responses/Unauthorized'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        name:
          type: string
          nullable: true
        provider:
          type: string
          example: "google"
        providerId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - email
        - provider
        - providerId
        - createdAt
        - updatedAt

    LoginResponse:
      type: object
      properties:
        accessToken:
          type: string
          description: JWT access token
        refreshToken:
          type: string
          description: Refresh token for token renewal
        expiresAt:
          type: string
          format: date-time
          description: Access token expiration time
        user:
          $ref: '#/components/schemas/User'
      required:
        - accessToken
        - refreshToken
        - expiresAt
        - user

    CreateEnergySessionDto:
      type: object
      properties:
        energyScore:
          type: integer
          minimum: 1
          maximum: 5
          description: Energy level on 1-5 scale
        duration:
          type: integer
          minimum: 1
          maximum: 1440
          description: Expected or actual duration in minutes
        difficultyModifier:
          type: number
          minimum: 0.1
          maximum: 3.0
          default: 1.0
          description: Activity difficulty multiplier
        activity:
          type: string
          maxLength: 200
          description: Activity description
        notes:
          type: string
          maxLength: 1000
          description: Session notes
        location:
          type: string
          maxLength: 100
          description: Location where activity takes place
        tags:
          type: array
          items:
            type: string
          maxItems: 10
          description: Tags for categorization
        sessionStartTime:
          type: string
          format: date-time
          description: Session start time (defaults to current time)
        sessionEndTime:
          type: string
          format: date-time
          description: Session end time (for completed sessions)
      required:
        - energyScore
        - duration

    UpdateEnergySessionDto:
      type: object
      properties:
        energyScore:
          type: integer
          minimum: 1
          maximum: 5
        duration:
          type: integer
          minimum: 1
          maximum: 1440
        difficultyModifier:
          type: number
          minimum: 0.1
          maximum: 3.0
        activity:
          type: string
          maxLength: 200
        notes:
          type: string
          maxLength: 1000
        location:
          type: string
          maxLength: 100
        tags:
          type: array
          items:
            type: string
          maxItems: 10
        sessionEndTime:
          type: string
          format: date-time

    EnergySessionResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        energyScore:
          type: integer
          minimum: 1
          maximum: 5
        duration:
          type: integer
          description: Duration in minutes
        difficultyModifier:
          type: number
          minimum: 0.1
          maximum: 3.0
        activity:
          type: string
          nullable: true
        notes:
          type: string
          nullable: true
        location:
          type: string
          nullable: true
        tags:
          type: array
          items:
            type: string
        calculatedProductivity:
          type: number
          description: Calculated productivity score
        sessionStartTime:
          type: string
          format: date-time
        sessionEndTime:
          type: string
          format: date-time
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - userId
        - energyScore
        - duration
        - difficultyModifier
        - tags
        - calculatedProductivity
        - sessionStartTime
        - createdAt
        - updatedAt

    Activity:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
          nullable: true
        category:
          type: string
          enum: [EXERCISE, MEDITATION, WORK, LEARNING, SOCIAL, REST]
        defaultDurationMinutes:
          type: integer
        defaultDifficultyModifier:
          type: number
        energyLevel:
          type: integer
          minimum: 1
          maximum: 5
        timeOfDay:
          type: string
          enum: [MORNING, AFTERNOON, EVENING, ANY]
          nullable: true
        tags:
          type: array
          items:
            type: string
        instructions:
          type: string
          nullable: true
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - name
        - category
        - defaultDurationMinutes
        - defaultDifficultyModifier
        - energyLevel
        - tags
        - isActive
        - createdAt
        - updatedAt

    RoutineRecommendation:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        activityId:
          type: string
          format: uuid
        recommendationType:
          type: string
          enum: [ENERGY_BOOST, PRODUCTIVITY, RECOVERY, MAINTENANCE]
        status:
          type: string
          enum: [SUGGESTED, ACCEPTED, COMPLETED, SKIPPED, EXPIRED]
        priority:
          type: integer
          minimum: 1
          maximum: 10
        estimatedDurationMinutes:
          type: integer
        difficultyModifier:
          type: number
        reason:
          type: string
          description: Explanation for why this was recommended
        expiresAt:
          type: string
          format: date-time
        metadata:
          type: object
          nullable: true
          description: Additional recommendation context
        acceptedAt:
          type: string
          format: date-time
          nullable: true
        completedAt:
          type: string
          format: date-time
          nullable: true
        skippedAt:
          type: string
          format: date-time
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        activity:
          $ref: '#/components/schemas/Activity'
      required:
        - id
        - userId
        - activityId
        - recommendationType
        - status
        - priority
        - estimatedDurationMinutes
        - difficultyModifier
        - reason
        - expiresAt
        - createdAt
        - updatedAt
        - activity

    Error:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
        statusCode:
          type: integer
        timestamp:
          type: string
          format: date-time
        path:
          type: string
      required:
        - error
        - message
        - statusCode
        - timestamp
        - path

  responses:
    BadRequest:
      description: Bad request - validation error or malformed request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Unauthorized:
      description: Unauthorized - invalid or missing authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

# Implementation Status: ✅ FULLY IMPLEMENTED
# - Authentication: Google OAuth (web + mobile), JWT refresh tokens
# - User Management: Profile CRUD operations
# - Energy Tracking: 7 endpoints with comprehensive filtering and analytics
# - Routine Recommendations: Complete lifecycle management with rule-based engine
# - Activity Management: Activity catalog with filtering capabilities
# 
# Total Endpoints Implemented: 20+
# Test Coverage: 532+ passing tests
# Architecture: Clean Architecture + DDD + CQRS + Hexagonal patterns
# Database: PostgreSQL with Prisma ORM, comprehensive indexing strategy